version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: tfd_postgres
    restart: always
    environment:
      POSTGRES_USER: tfd_user
      POSTGRES_PASSWORD: tfd_pass
      POSTGRES_DB: tfd_db
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./ddl:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tfd_user -d tfd_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tfd_network

  airflow-init:
    image: apache/airflow:2.8.1
    container_name: tfd_airflow_init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://tfd_user:tfd_pass@postgres/tfd_db
      - GX_HOME=/opt/gx
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./requirements.txt:/requirements.txt
      - ./database:/opt/airflow/database
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && 
               until airflow db check; do echo 'Waiting for PostgreSQL...'; sleep 2; done && 
               if ! airflow db check-migrations; then airflow db init; fi && 
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true"
    networks:
      - tfd_network

  airflow:
    image: apache/airflow:2.8.1
    container_name: tfd_airflow
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://tfd_user:tfd_pass@postgres/tfd_db
      - GX_HOME=/opt/gx
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
      - ./database:/opt/airflow/database
      - ./input_data:/opt/input_data
      - ./output_data:/opt/output_data
      - ./configFiles:/opt/configFiles
      - ./gx:/opt/gx
      - ./alerts:/opt/alerts
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow webserver & airflow scheduler"
    networks:
      - tfd_network

  fastapi:
    build: ./
    container_name: tfd_fastapi
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    networks:
      - tfd_network

  streamlit:
    build: ./
    container_name: tfd_streamlit
    restart: always
    depends_on:
      fastapi:
        condition: service_started
    ports:
      - "8501:8501"
    volumes:
      - ./:/app
    networks:
      - tfd_network

  grafana:
    image: grafana/grafana:latest
    container_name: tfd_grafana
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - tfd_network

volumes:
  pg_data:
  grafana_data:
  database:

networks:
  tfd_network:
    driver: bridge